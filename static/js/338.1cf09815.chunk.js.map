{"version":3,"file":"static/js/338.1cf09815.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/styles.module.css?5f34","redux/contacts/selectors.js","components/Form/Form.jsx","webpack://react-homework-template/./src/components/Filter/styles.module.css?0bf3","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/StatusBar/StatusBar.module.css?9674","components/StatusBar/StatusBar.jsx","webpack://react-homework-template/./src/components/ContactsList/styles.module.css?c1ff","webpack://react-homework-template/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","components/ContactsList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"styles_form__cFFCH\",\"submitButton\":\"styles_submitButton__Y16I5\",\"icon\":\"styles_icon__v4Zzc\",\"phoneInputCountry\":\"styles_phoneInputCountry__R21tL\"};","import { createSelector } from '@reduxjs/toolkit';\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter.inputValue;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectSortedAlphabetically = state =>\n  state.filter.sortedAlphabetically;\n\nexport const selectContactsCount = createSelector(\n  [selectContacts],\n  contacts => {\n    return contacts.reduce(\n      (count, contact) => {\n        if (contact.error) {\n          console.log(contact.error);\n        }\n        count.total++;\n        return count;\n      },\n      { total: 0 }\n    );\n  }\n);\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","\n\n\nimport { TiUserAddOutline } from 'react-icons/ti';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport styles from './styles.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts} from 'redux/contacts/selectors';\n// const Form = ({ contacts, addContact }) => {\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n//   const [isDisabled, setIsDisabled] = useState(false);\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    const form = evt?.target;\n    const { name, phone } = form.elements;\n    const contactName = name.value;\n    const contactPhone = phone.value;\n\n    if (\n      !contacts?.length ||\n      !contacts.some(contact => contact.name === contactName)\n    ) {     \n       dispatch(\n      addContact({\n        name:  contactName,\n        phone: contactPhone,\n      })\n    );\n      form.reset();\n    } else {\n      Notify.warning(`${contactName} ${ contactPhone} is already in contacts.`);\n      form.reset();    \n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"john doe\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                 \n          required\n        />\n      </label>\n      <label>\n        phone:\n        <input\n          type=\"tel\"\n          placeholder=\"+380 33 333 3333\"\n          className={styles.phoneInputCountry}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"         \n          name=\"phone\"          \n          required\n        />\n      </label>\n\n      <button\n        className={styles.submitButton}\n        type=\"submit\"        \n      >\n        add contact\n        <TiUserAddOutline size={20} className={styles.icon} />\n      </button>\n    </form>\n  );\n};\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"styles_wrapper__3xyTZ\",\"text\":\"styles_text__KOwe7\",\"button\":\"styles_button__2uLTd\",\"icon\":\"styles_icon__Y-780\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport{selectFilter,selectContacts } from 'redux/contacts/selectors'\nimport styles from './styles.module.css';\nimport clearIcon from '../../images/backspace.png';\n\n// const Filter = ({ onFilterInput }) => {\n//   const [filter, setFilter] = useState('');\n//   useEffect(() => {\n//     onFilterInput(filter);\n//   }, [filter, onFilterInput]);\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const onChange = e => dispatch(setFilter(e.currentTarget.value));\n  return (\n    <div className={styles.wrapper}>\n      <p className={styles.text}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n        placeholder=\"Enter name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        disabled={useSelector(selectContacts).length === 0}\n      />\n      {useSelector(selectFilter) && (\n        <button\n          className={styles.button}\n          type=\"button\"\n          onClick={() => dispatch(setFilter(''))}\n        >\n          <img src={clearIcon} alt=\"clear icon\" className={styles.icon} />\n        </button>\n      )}\n    </div>\n  );\n};\n\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"StatusBar\":\"StatusBar_StatusBar__WIFQY\",\"infoSection\":\"StatusBar_infoSection__9k4Xo\",\"counter\":\"StatusBar_counter__kspNp\",\"counter__header\":\"StatusBar_counter__header__PfH0A\",\"buttons\":\"StatusBar_buttons__zGLId\",\"counter__data\":\"StatusBar_counter__data__4ja6H\",\"button_sort\":\"StatusBar_button_sort__dEa-Y\",\"button_delete\":\"StatusBar_button_delete__mp1OU\",\"icon\":\"StatusBar_icon__9absC\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsCount} from 'redux/contacts/selectors';\nimport { sortContactsAz,deleteAllContacts,\n  sortContactsAzReverse,\n  sortContactsByDate,\n  sortContactsByDateReverse } from '../../redux/contacts/contactsSlice';\nimport { Filter } from '../Filter/Filter';\nimport css from './StatusBar.module.css';\nimport sortIcon from '../../images/sort-az.png';\nimport trashIcon from '../../images/trash.png';\nimport sortDateIcon from '../../images/sort-date.png'\nimport { useState } from 'react';\n\nexport const StatusBar = () => {\n  const [sorted, setSorted] = useState({ sortedAlphabetically: false, sortedByDate: false });\n  const dispatch = useDispatch();\n  const { total } = useSelector(selectContactsCount);\n \n  const handleDeleteAllContacts = () => {\n    dispatch(deleteAllContacts());\n  };\n\n  const handleSortAzContacts = () => {\n    if (sorted.sortedAlphabetically) {\n      dispatch(sortContactsAzReverse());\n      setSorted({ sortedAlphabetically: false, sortedByDate: false });\n    } else {\n      dispatch(sortContactsAz());\n      setSorted({ sortedAlphabetically: true, sortedByDate: false });\n    }\n  };\n\n  const handleSortDateContacts = () => {\n    if (sorted.sortedByDate) {\n      dispatch(sortContactsByDateReverse());\n      setSorted({ sortedAlphabetically: false, sortedByDate: false });\n    } else {\n      dispatch(sortContactsByDate());\n      setSorted({ sortedAlphabetically: false, sortedByDate: true });\n    }\n  };\n\n  return (\n    <div className={css.StatusBar}>\n      <div className={css.infoSection}>\n        <div className={css.counter}>\n         \n          <p className={css.counter__data}>\n             You have {total} {total === 1 ? 'contact' : 'contacts'}\n          </p>\n        </div>\n        {total > 0 && (\n          <div className={css.buttons}>\n            <button className={css.button_sort}\n              type=\"button\"\n              title={sorted.sortedAlphabetically ? 'Sort by name Z-A' : 'Sort by name A-Z'}\n              onClick={handleSortAzContacts}>\n              <img src={sortIcon} alt=\"sort icon\" className={css.icon} />\n            </button>\n            <button className={css.button_delete}\n              type=\"button\"\n              title='Delete All Contacts'\n              onClick={handleDeleteAllContacts}>\n              <img src={trashIcon} alt=\"trash icon\" className={css.icon} />\n            </button>\n            <button\n              className={css.button_sort}\n              type=\"button\"              \n              title={sorted.sortedByDate ? 'Sort by date added reverse' : 'Sort by date added'}\n              onClick={handleSortDateContacts}\n            >\n              <img src={ sortDateIcon} alt=\"sort date icon\" className={css.icon} />\n            </button>\n          </div>\n        )}\n      </div>\n      <Filter />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"styles_contactsList__i8IYU\",\"phoneNumber\":\"styles_phoneNumber__iAhMW\",\"contactName\":\"styles_contactName__rNpCC\",\"listItem\":\"styles_listItem__VPFBJ\",\"telephone_icon\":\"styles_telephone_icon__7gZxR\",\"user_icon\":\"styles_user_icon__Xbcz9\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Notification_message__iUHOw\"};","import PropTypes from 'prop-types';\nimport css from './Notification.module.css';\n\nexport const Notification = ({ message }) => <p className={css.message}>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import styles from './styles.module.css';\nimport { TiUserDeleteOutline } from 'react-icons/ti';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact} from 'redux/contacts/operations';\n\nimport userIcon from '../../images/user.png';\nimport telephoneIcon from '../../images/telephone.png';\nimport { Notification } from 'components/Notification/Notification';\nimport {\n  selectIsLoading,\n  selectFilteredContacts,\n selectFilter,\n  selectContactsCount,\n} from '../../redux/contacts/selectors';\n\n export const ContactList = () => {\n    const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contactsCount = useSelector(selectContactsCount);\n  const filter = useSelector(selectFilter);\n  const filteredContacts = useSelector(selectFilteredContacts);\n \n \n \n  return (\n    <>\n        {!isLoading && contactsCount.total === 0 ? (\n        <Notification message=\"No contacts yet\" />\n      ) : filter !== '' && filteredContacts.length === 0 ? (\n        <Notification message=\"No contacts found\" />\n      ) : (\n      <ul className={styles.contactsList}>\n        {filteredContacts.map(({ name, id,phone }) => (\n          <li className={styles.listItem} key={id} id={id}>\n              <img src={userIcon} alt=\"user icon\" className={styles.user_icon} />\n            <span className={styles.contactName}>{name}: </span>\n            <span className={styles.phoneNumber}>{phone}\n            <a href={`tel:${phone}`}>\n            <img src={telephoneIcon} alt=\"telephone icon\" className={styles.telephone_icon} />\n              </a>\n              </span>\n            <button\n              type=\"button\"\n              className={styles.buttons}\n              onClick={() => dispatch(deleteContact(id))}\n              aria-label=\"delete contact button\"\n            >\n              <TiUserDeleteOutline size={20} />\n            </button>\n          </li>\n        ))}\n        </ul>\n              )}\n      \n    </>\n  );\n};\n\n\n\n","import { Form } from '../components/Form/Form';\nimport { StatusBar } from '../components/StatusBar/StatusBar';\nimport { ContactList } from '../components/ContactsList/ContactList';\n// import { Notification } from './Notification/Notification';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Form />\n      <StatusBar />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","inputValue","selectIsLoading","isLoading","selectContactsCount","createSelector","reduce","count","contact","error","console","log","total","selectFilteredContacts","name","toLowerCase","includes","Form","dispatch","useDispatch","useSelector","onSubmit","evt","preventDefault","form","target","elements","phone","contactName","value","contactPhone","length","some","Notify","reset","addContact","className","styles","type","placeholder","pattern","title","required","size","Filter","onChange","e","setFilter","currentTarget","disabled","onClick","src","clearIcon","alt","StatusBar","useState","sortedAlphabetically","sortedByDate","sorted","setSorted","css","sortContactsAzReverse","sortContactsAz","sortIcon","deleteAllContacts","trashIcon","sortContactsByDateReverse","sortContactsByDate","sortDateIcon","Notification","message","ContactList","contactsCount","filteredContacts","map","id","userIcon","href","telephoneIcon","deleteContact"],"sourceRoot":""}